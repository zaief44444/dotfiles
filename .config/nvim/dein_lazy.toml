[[plugins]]
repo = 'tpops/vim-surround'
on_i = 1

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']
hook_add = '''
    let g:clang_format#style_options = {
        \ "BasedOnStyle" : "Google"}
    let g:clang_format#auto_format = 1
    autocmd FileType c,cpp,objc map <buffer><Leader>f <Plug>(operator-clang-format)'''

[[plugins]]
repo = 'kana/vim-operator-user'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'cohama/lexima.vim'
on_i = 1
hook_post_source = '''
call lexima#add_rule({'at':'\%#.*[-0-9a-zA-Z_,:]','char':'{','input':'{'})
call lexima#add_rule({'at':'\%#.*[-0-9a-zA-Z_,:]','char':'(','input':'('})
call lexima#add_rule({'at':'\%#.*[-0-9a-zA-Z_,:]','char':'[','input':'['})
call lexima#add_rule({'at':'\%#.*[-0-9a-zA-Z_,:]','char':'"','input':'"'})
call lexima#add_rule({'at': '\%#.*[-0-9a-zA-Z_,:]', 'char': "'", 'input': "'"})
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
'''
on_i = 1

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source ='''
  let g:deoplete#sources#clang#libclang_path='/usr/local/opt/llvm/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header='/usr/local/opt/llvm/lib/clang'
'''
on_ft = ['c', 'cpp', 'cmake', 'h']
depends = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
hook_source = '''
  let g:deoplete#sources#jedi#server_timeout = 20
  let g:deoplete#sources#jedi#python_path='/usr/local/bin/python3'
'''
on_ft = 'python'

[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
  " 保存時に必要なimportを自動的に挿入
  let g:go_fmt_command = "goimports"
  " LSPに任せる機能をOFFにする
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''
on_ft = 'go'

# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# rev = 'next'
# build = 'bash install.sh'
# hook_add = '''
#   set hidden
#   let g:LanguageClient_serverCommands = {}
#   let g:LanguageClient_serverCommands = {
#       \ 'go': ['gopls'],
#       \ 'cpp': ['clangd'],
#       \ 'c' : ['clangd']
#       \ }
#   let g:LanguageClient_autoStart = 1
#   nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
#   nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
#   augroup LanguageClient_config
#     autocmd!
#     autocmd User LanguageClientStarted setlocal signcolumn=yes
#     autocmd User LanguageClientStopped setlocal signcolumn=auto
#   augroup END
# 
#   function LC_maps()
#     if has_key(g:LanguageClient_serverCommands, &filetype)
#         " any keybindings you want, such as ...
#         nnoremap <buffer> <silent> K :call LanguageClient#textDocument_hover()<CR>
#     endif
#   endfunction
#   autocmd FileType * call LC_maps()
# 
#   augroup LCHighlight
#     autocmd!
#     autocmd CursorHold,CursorHoldI *.c,*.cpp call LanguageClient#textDocument_documentHighlight()
#   augroup END
#   " カーソル停止から更新までの時間をミリ秒で記入。デフォルトは4秒=4000
#   set updatetime=50
# '''

# [[plugins]]
# repo = "OmniSharp/omnisharp-vim"
# on_ft = ["cs"]
# build = "xbuild server/OmniSharp.sln"

# [[plugins]]
# repo = "Robzz/deoplete-omnisharp"
# on_source = ["deoplete.nvim"]
